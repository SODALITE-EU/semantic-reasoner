# baseURI: https://www.sodalite.eu/ontologies/exchange/rm/
# imports: https://www.sodalite.eu/ontologies/exchange/

@prefix : <https://www.sodalite.eu/ontologies/exchange/rm/> .
@prefix exchange: <https://www.sodalite.eu/ontologies/exchange/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:
  rdf:type owl:Ontology ;
  owl:imports exchange: ;
  owl:versionInfo "Created by the SODALITE IDE" ;
.

:RM_1
  rdf:type exchange:RM ;
  exchange:userId "27827d44-0f6c-11ea-8d71-362b9e155667" ;
.

	
:Parameter_1
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'network' ; 
.

:Parameter_2
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_3
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_1 ;
  exchange:hasParameter :Parameter_2 ;
.	
:Parameter_4
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'flavor' ; 
.

:Parameter_5
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_6
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_4 ;
  exchange:hasParameter :Parameter_5 ;
.	
:Parameter_7
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'key_name' ; 
.

:Parameter_8
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_9
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_7 ;
  exchange:hasParameter :Parameter_8 ;
.	
:Parameter_10
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'image' ; 
.

:Parameter_11
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_12
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_10 ;
  exchange:hasParameter :Parameter_11 ;
.	
:Parameter_13
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'security_groups' ; 
.

:Parameter_14
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_15
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_13 ;
  exchange:hasParameter :Parameter_14 ;
.	
:Parameter_16
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'name' ; 
.

:Parameter_17
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_18
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_16 ;
  exchange:hasParameter :Parameter_17 ;
.	
:Parameter_19
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'username' ; 
.

:Parameter_20
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_21
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_19 ;
  exchange:hasParameter :Parameter_20 ;
.	
:Parameter_22
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'include_exporter' ; 
.

:Parameter_23
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_24
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_22 ;
  exchange:hasParameter :Parameter_23 ;
.	
:Parameter_25
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'timeout' ; 
.

:Parameter_26
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_27
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_25 ;
  exchange:hasParameter :Parameter_26 ;
.	
:Parameter_28
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'floating_ip_pools' ; 
.

:Parameter_29
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_30
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_28 ;
  exchange:hasParameter :Parameter_29 ;
.	
:Parameter_31
  rdf:type exchange:Parameter ;
  exchange:name "property" ;  
  exchange:value 'userdata' ; 
.

:Parameter_32
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_33
  rdf:type exchange:Parameter ;
  exchange:name "get_property" ;
  exchange:hasParameter :Parameter_31 ;
  exchange:hasParameter :Parameter_32 ;
.	

:Parameter_34
  rdf:type exchange:Parameter ;
  exchange:name "attribute" ;  
  exchange:value 'id' ; 
.

:Parameter_35
  rdf:type exchange:Parameter ;
  exchange:name "entity" ;  
  exchange:value 'SELF' ; 
.


:Parameter_36
  rdf:type exchange:Parameter ;
  exchange:name "get_attribute" ;
  exchange:hasParameter :Parameter_34 ;
  exchange:hasParameter :Parameter_35 ;
.	


:Parameter_37
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_3 ; 
.

:Parameter_38
  rdf:type exchange:Parameter ;
  exchange:name "network" ;
  exchange:hasParameter :Parameter_37 ;
.	

:Parameter_39
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_6 ; 
.

:Parameter_40
  rdf:type exchange:Parameter ;
  exchange:name "flavor" ;
  exchange:hasParameter :Parameter_39 ;
.	

:Parameter_41
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_9 ; 
.

:Parameter_42
  rdf:type exchange:Parameter ;
  exchange:name "key_name" ;
  exchange:hasParameter :Parameter_41 ;
.	

:Parameter_43
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_12 ; 
.

:Parameter_44
  rdf:type exchange:Parameter ;
  exchange:name "image" ;
  exchange:hasParameter :Parameter_43 ;
.	

:Parameter_45
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_15 ; 
.

:Parameter_46
  rdf:type exchange:Parameter ;
  exchange:name "security_groups" ;
  exchange:hasParameter :Parameter_45 ;
.	

:Parameter_47
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_18 ; 
.

:Parameter_48
  rdf:type exchange:Parameter ;
  exchange:name "vm_name" ;
  exchange:hasParameter :Parameter_47 ;
.	

:Parameter_49
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_21 ; 
.

:Parameter_50
  rdf:type exchange:Parameter ;
  exchange:name "ansible_user" ;
  exchange:hasParameter :Parameter_49 ;
.	

:Parameter_51
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_24 ; 
.

:Parameter_52
  rdf:type exchange:Parameter ;
  exchange:name "include_exporter" ;
  exchange:hasParameter :Parameter_51 ;
.	

:Parameter_53
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_27 ; 
.

:Parameter_54
  rdf:type exchange:Parameter ;
  exchange:name "timeout" ;
  exchange:hasParameter :Parameter_53 ;
.	

:Parameter_55
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_30 ; 
.

:Parameter_56
  rdf:type exchange:Parameter ;
  exchange:name "floating_ip_pools" ;
  exchange:hasParameter :Parameter_55 ;
.	

:Parameter_57
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_33 ; 
.

:Parameter_58
  rdf:type exchange:Parameter ;
  exchange:name "userdata" ;
  exchange:hasParameter :Parameter_57 ;
.	

:Parameter_59
  rdf:type exchange:Parameter ;
  exchange:name "default" ;  
  exchange:hasParameter :Parameter_36 ; 
.

:Parameter_60
  rdf:type exchange:Parameter ;
  exchange:name "id" ;
  exchange:hasParameter :Parameter_59 ;
.	

:Parameter_61
  rdf:type exchange:Parameter ;
  exchange:name "inputs" ;
  exchange:hasParameter :Parameter_38 ;
  exchange:hasParameter :Parameter_40 ;
  exchange:hasParameter :Parameter_42 ;
  exchange:hasParameter :Parameter_44 ;
  exchange:hasParameter :Parameter_46 ;
  exchange:hasParameter :Parameter_48 ;
  exchange:hasParameter :Parameter_50 ;
  exchange:hasParameter :Parameter_52 ;
  exchange:hasParameter :Parameter_54 ;
  exchange:hasParameter :Parameter_56 ;
  exchange:hasParameter :Parameter_58 ;
.

:Parameter_62
  rdf:type exchange:Parameter ;
  exchange:name "path" ;
  exchange:value '/home/yosu/Projects/Sodalite/Git/iac-management/use-cases/modules/openstack/playbooks/vm_create.yml' ;
.

:Parameter_63
  rdf:type exchange:Parameter ;
  exchange:name "content" ;
  exchange:value '---\n- name: Refresh token and update env\n  import_playbook: egi_refresh_token.yml\n  when: env.checkin_env is defined\n- hosts: all\n  gather_facts: no\n  vars:\n    exporter_meta:\n      prometheus_io_scrape: "true"\n      prometheus_io_port: "9100"\n  tasks:\n    - set_fact:\n        os_env: "{{ env.os_env }}"\n      when: env.os_env is defined  \n    - name: Create VM\n      os_server:\n        state: present\n        name: "{{ vm_name }}"\n        image: "{{ image }}"\n        key_name: "{{ key_name }}"\n        flavor: "{{ flavor }}"\n        network: "{{ network }}"\n        security_groups: "{{ security_groups }}"\n        timeout: "{{ timeout }}"\n        floating_ip_pools: "{{ floating_ip_pools }}"\n        meta: "{{ exporter_meta if (include_exporter is defined and include_exporter == True) else {} }}"\n        userdata: "{{ userdata }}"\n      register: server_info\n      environment: "{{ os_env if os_env is defined }}"\n    - name: Set attributes\n      set_stats:\n        data:\n          private_address: "{{ server_info.server.private_v4 }}"\n          public_address: "{{ server_info.server.public_v4 }}"\n          id: "{{ server_info.server.id }}"\n    - name: Create temporary invetory for ssh wait\n      add_host:\n        name: server\n        groups: vms\n        ansible_host: "{{ server_info.server.public_v4 }}"\n        ansible_user: "{{ ansible_user }}"\n        ansible_ssh_common_args: >\n          -o IdentitiesOnly=yes\n          -o BatchMode=yes\n          -o UserKnownHostsFile=/dev/null\n          -o StrictHostKeyChecking=no\n- hosts: vms\n  gather_facts: no\n  tasks:\n    - name: Wait for ssh to wake up\n      wait_for_connection:\n      environment: "{{ os_env if os_env is defined }}"\n' ;
.


:Parameter_64
  rdf:type exchange:Parameter ;
  exchange:name "primary" ;
  exchange:hasParameter :Parameter_62 ;
  exchange:hasParameter :Parameter_63 ;
.

:Parameter_65
  rdf:type exchange:Parameter ;
  exchange:name "path" ;
  exchange:value '/home/yosu/Projects/Sodalite/Git/iac-management/use-cases/modules/openstack/playbooks/egi_refresh_token.yml' ; 
 .

:Parameter_66
  rdf:type exchange:Parameter ;
  exchange:name "content" ;
  exchange:value '---\n- hosts: all\n  gather_facts: no\n  \n  vars:\n# Some Global Vars\n    CHECKIN_CLIENT_ID: "{{ env.checkin_env.CHECKIN_CLIENT_ID }}"\n    CHECKIN_CLIENT_SECRET: "{{ env.checkin_env.CHECKIN_CLIENT_SECRET }}"\n    CHECKIN_REFRESH_TOKEN: "{{ env.checkin_env.CHECKIN_REFRESH_TOKEN }}"\n    EGI_SITE: "{{ env.checkin_env.EGI_SITE }}"\n    CHECKIN_OIDC_URL: https://aai.egi.eu/oidc\n    GOCDB_PUBLICURL: https://goc.egi.eu/gocdbpi/public/\n    # TODO: protocal can be also "oidc", make fallback to it\n    PROTOCOL: openid\n    auth_path: "{{ \'/v3/OS-FEDERATION/identity_providers/egi.eu/protocols/\' + PROTOCOL + \'/auth\' }}"\n    project_path: /v3/auth/projects\n    token_path: /v3/auth/tokens\n  \n  tasks:\n# Getting access token from CHECKIN\n    - name: Discover OIDC\n      uri:\n        url: "{{ CHECKIN_OIDC_URL }}/.well-known/openid-configuration"\n        method: GET\n      register: oidc_discovery\n    - set_fact:\n        OIDC_ENDPOINT: "{{ oidc_discovery.json.token_endpoint }}"\n    - debug:\n        msg: "{{ OIDC_ENDPOINT }}"\n    - set_fact:\n        refresh_token_request:\n          client_id: "{{ CHECKIN_CLIENT_ID }}"\n          client_secret: "{{ CHECKIN_CLIENT_SECRET }}"\n          grant_type: "refresh_token"\n          refresh_token: "{{ CHECKIN_REFRESH_TOKEN }}"\n          scope: "openid email profile"\n    - name: Refresh token\n      uri:\n        url: "{{ OIDC_ENDPOINT }}"\n        method: POST\n        body_format: form-urlencoded\n        body: "{{ refresh_token_request }}"\n      register: refresh_token\n    - set_fact:\n        access_token: "{{ refresh_token.json.access_token }}"\n    - debug:\n        msg: "{{ access_token }}"\n# Getting Site Information\n    - set_fact:\n        site_info_request:\n          method: "get_service_endpoint"\n          service_type: org.openstack.nova\n          monitored: "Y"\n          sitename: "{{ EGI_SITE }}"\n    - name: Get site\n      uri:\n        url: "{{ GOCDB_PUBLICURL }}?{{ site_info_request | urlencode }}"\n        method: GET\n        return_content: yes\n      register: site_xml\n    # TODO: Check the PRODUCTION state\n    # # xml module version to obtain URL\n    # - name: Parse site xml response\n    #   xml:\n    #     xmlstring: "{{ site_xml.content }}"\n    #     xpath: /results/SERVICE_ENDPOINT/URL\n    #     content: text\n    #   register: site_xml\n    # - set_fact:\n    #     site_endpoint: "{{ site_xml.matches.0.URL }}"\n    # - debug:\n    #     msg: "{{ site_endpoint }}"\n    # regex version to obtain URL\n    - set_fact:\n        site_endpoint: "{{ ( site_xml.content | regex_search(\'<URL>(.+)</URL>\', \'\\\\1\') | first ).rstrip(\'/\') }}"\n    - debug:\n        msg: "{{ site_endpoint }}"\n# Getting unscoped token, project id and env for openstack\n    - block:\n      - debug:\n          msg: "{{ site_auth_endpoint }} {{ site_project_endpoint }}"\n        \n      - name: Get unscoped token\n        uri: \n          url: "{{ site_auth_endpoint }}"\n          method: POST\n          status_code: 201\n          headers:\n            Authorization: "Bearer {{ access_token }}"\n        register: site_auth_token_response\n      - set_fact:\n          unscoped_token: "{{ site_auth_token_response.x_subject_token }}"\n      - debug:\n          msg: "{{ unscoped_token }}"\n      - name: Get project id\n        uri: \n          url: "{{ site_project_endpoint }}"\n          method: GET\n          headers:\n            X-Auth-Token: "{{ unscoped_token }}"\n        register: site_project_response\n      - set_fact:\n          # TODO: can be several projects\n          # TODO: check other parameters, e.g. enabled\n          project_id: "{{ site_project_response.json.projects.0.id }}"\n      - debug:\n          msg: "{{ project_id }}"\n      - set_fact:\n          scoped_token_request:\n            auth:\n              identity:\n                methods: ["token"]\n                token:\n                  id: "{{ unscoped_token }}"\n              scope:\n                project:\n                  id: "{{ project_id }}"\n      - name: Get scoped token\n        uri: \n          url: "{{ site_token_endpoint }}"\n          method: POST\n          body: "{{ scoped_token_request }}"\n          body_format: json\n          status_code: 201\n        register: scoped_token_response\n      - set_fact:\n          scoped_token: "{{ scoped_token_response.x_subject_token }}"\n      - debug:\n          msg: "{{ scoped_token }}"\n      - set_fact:\n          os_env:\n            OS_AUTH_URL: "{{ site_endpoint }}"\n            OS_AUTH_TYPE: "v3oidcaccesstoken"\n            OS_IDENTITY_PROVIDER: "egi.eu"\n            OS_PROTOCOL: "{{ PROTOCOL }}"\n            OS_ACCESS_TOKEN: "{{ access_token }}"\n            OS_PROJECT_ID: "{{ project_id }}"   \n            OS_USER_DOMAIN_NAME: ""\n            OS_REGION_NAME: ""\n            OS_PROJECT_NAME: ""        \n      - debug:\n          msg: "{{ os_env }}"\n      vars:\n        site_ep_basename: "{{ site_endpoint | basename }}"\n        site_ep_dirname: "{{ site_endpoint | dirname }}"\n        site_endpoint_prefix: "{{ (site_ep_dirname + \'%s\') if (\'v3\' in site_ep_basename or \'v2.0\' in site_ep_basename) else (site_endpoint + \'%s\') }}"\n        site_auth_endpoint: "{{ site_endpoint_prefix | format(auth_path) }}"\n        site_project_endpoint: "{{ site_endpoint_prefix | format(project_path) }}"\n        site_token_endpoint: "{{ site_endpoint_prefix | format(token_path) }}"\n' ;
.

:Parameter_67
  rdf:type exchange:Parameter ;
  exchange:name "file" ;
  exchange:hasParameter :Parameter_65 ;
  exchange:hasParameter :Parameter_66 ;
.


:Parameter_68
  rdf:type exchange:Parameter ;
  exchange:name "dependencies" ;
  exchange:hasParameter :Parameter_67 ; 
.

:Parameter_69
  rdf:type exchange:Parameter ;
  exchange:name "implementation" ;
  exchange:hasParameter :Parameter_64 ;
 exchange:hasParameter :Parameter_68 ;
.

:Parameter_70
  rdf:type exchange:Parameter ;
  exchange:name "create" ;
  exchange:hasParameter :Parameter_61 ;
  exchange:hasParameter :Parameter_69 ;
.
:Parameter_71
  rdf:type exchange:Parameter ;
  exchange:name "inputs" ;
  exchange:hasParameter :Parameter_60 ;
.

:Parameter_72
  rdf:type exchange:Parameter ;
  exchange:name "path" ;
  exchange:value '/home/yosu/Projects/Sodalite/Git/iac-management/use-cases/modules/openstack/playbooks/vm_delete.yml' ;
.

:Parameter_73
  rdf:type exchange:Parameter ;
  exchange:name "content" ;
  exchange:value '---\n- name: Refresh token and update env\n  import_playbook: egi_refresh_token.yml\n  when: env.checkin_env is defined\n- hosts: all\n  gather_facts: no\n  tasks:\n    - set_fact:\n        os_env: "{{ env.os_env }}"\n      when: env.os_env is defined  \n      \n    - name: Delete VM\n      os_server:\n        state: absent\n        name: "{{ id }}"\n      environment: "{{ os_env if os_env is defined }}"\n' ;
.


:Parameter_74
  rdf:type exchange:Parameter ;
  exchange:name "primary" ;
  exchange:hasParameter :Parameter_72 ;
  exchange:hasParameter :Parameter_73 ;
.

:Parameter_75
  rdf:type exchange:Parameter ;
  exchange:name "path" ;
  exchange:value '/home/yosu/Projects/Sodalite/Git/iac-management/use-cases/modules/openstack/playbooks/egi_refresh_token.yml' ; 
 .

:Parameter_76
  rdf:type exchange:Parameter ;
  exchange:name "content" ;
  exchange:value '---\n- hosts: all\n  gather_facts: no\n  \n  vars:\n# Some Global Vars\n    CHECKIN_CLIENT_ID: "{{ env.checkin_env.CHECKIN_CLIENT_ID }}"\n    CHECKIN_CLIENT_SECRET: "{{ env.checkin_env.CHECKIN_CLIENT_SECRET }}"\n    CHECKIN_REFRESH_TOKEN: "{{ env.checkin_env.CHECKIN_REFRESH_TOKEN }}"\n    EGI_SITE: "{{ env.checkin_env.EGI_SITE }}"\n    CHECKIN_OIDC_URL: https://aai.egi.eu/oidc\n    GOCDB_PUBLICURL: https://goc.egi.eu/gocdbpi/public/\n    # TODO: protocal can be also "oidc", make fallback to it\n    PROTOCOL: openid\n    auth_path: "{{ \'/v3/OS-FEDERATION/identity_providers/egi.eu/protocols/\' + PROTOCOL + \'/auth\' }}"\n    project_path: /v3/auth/projects\n    token_path: /v3/auth/tokens\n  \n  tasks:\n# Getting access token from CHECKIN\n    - name: Discover OIDC\n      uri:\n        url: "{{ CHECKIN_OIDC_URL }}/.well-known/openid-configuration"\n        method: GET\n      register: oidc_discovery\n    - set_fact:\n        OIDC_ENDPOINT: "{{ oidc_discovery.json.token_endpoint }}"\n    - debug:\n        msg: "{{ OIDC_ENDPOINT }}"\n    - set_fact:\n        refresh_token_request:\n          client_id: "{{ CHECKIN_CLIENT_ID }}"\n          client_secret: "{{ CHECKIN_CLIENT_SECRET }}"\n          grant_type: "refresh_token"\n          refresh_token: "{{ CHECKIN_REFRESH_TOKEN }}"\n          scope: "openid email profile"\n    - name: Refresh token\n      uri:\n        url: "{{ OIDC_ENDPOINT }}"\n        method: POST\n        body_format: form-urlencoded\n        body: "{{ refresh_token_request }}"\n      register: refresh_token\n    - set_fact:\n        access_token: "{{ refresh_token.json.access_token }}"\n    - debug:\n        msg: "{{ access_token }}"\n# Getting Site Information\n    - set_fact:\n        site_info_request:\n          method: "get_service_endpoint"\n          service_type: org.openstack.nova\n          monitored: "Y"\n          sitename: "{{ EGI_SITE }}"\n    - name: Get site\n      uri:\n        url: "{{ GOCDB_PUBLICURL }}?{{ site_info_request | urlencode }}"\n        method: GET\n        return_content: yes\n      register: site_xml\n    # TODO: Check the PRODUCTION state\n    # # xml module version to obtain URL\n    # - name: Parse site xml response\n    #   xml:\n    #     xmlstring: "{{ site_xml.content }}"\n    #     xpath: /results/SERVICE_ENDPOINT/URL\n    #     content: text\n    #   register: site_xml\n    # - set_fact:\n    #     site_endpoint: "{{ site_xml.matches.0.URL }}"\n    # - debug:\n    #     msg: "{{ site_endpoint }}"\n    # regex version to obtain URL\n    - set_fact:\n        site_endpoint: "{{ ( site_xml.content | regex_search(\'<URL>(.+)</URL>\', \'\\\\1\') | first ).rstrip(\'/\') }}"\n    - debug:\n        msg: "{{ site_endpoint }}"\n# Getting unscoped token, project id and env for openstack\n    - block:\n      - debug:\n          msg: "{{ site_auth_endpoint }} {{ site_project_endpoint }}"\n        \n      - name: Get unscoped token\n        uri: \n          url: "{{ site_auth_endpoint }}"\n          method: POST\n          status_code: 201\n          headers:\n            Authorization: "Bearer {{ access_token }}"\n        register: site_auth_token_response\n      - set_fact:\n          unscoped_token: "{{ site_auth_token_response.x_subject_token }}"\n      - debug:\n          msg: "{{ unscoped_token }}"\n      - name: Get project id\n        uri: \n          url: "{{ site_project_endpoint }}"\n          method: GET\n          headers:\n            X-Auth-Token: "{{ unscoped_token }}"\n        register: site_project_response\n      - set_fact:\n          # TODO: can be several projects\n          # TODO: check other parameters, e.g. enabled\n          project_id: "{{ site_project_response.json.projects.0.id }}"\n      - debug:\n          msg: "{{ project_id }}"\n      - set_fact:\n          scoped_token_request:\n            auth:\n              identity:\n                methods: ["token"]\n                token:\n                  id: "{{ unscoped_token }}"\n              scope:\n                project:\n                  id: "{{ project_id }}"\n      - name: Get scoped token\n        uri: \n          url: "{{ site_token_endpoint }}"\n          method: POST\n          body: "{{ scoped_token_request }}"\n          body_format: json\n          status_code: 201\n        register: scoped_token_response\n      - set_fact:\n          scoped_token: "{{ scoped_token_response.x_subject_token }}"\n      - debug:\n          msg: "{{ scoped_token }}"\n      - set_fact:\n          os_env:\n            OS_AUTH_URL: "{{ site_endpoint }}"\n            OS_AUTH_TYPE: "v3oidcaccesstoken"\n            OS_IDENTITY_PROVIDER: "egi.eu"\n            OS_PROTOCOL: "{{ PROTOCOL }}"\n            OS_ACCESS_TOKEN: "{{ access_token }}"\n            OS_PROJECT_ID: "{{ project_id }}"   \n            OS_USER_DOMAIN_NAME: ""\n            OS_REGION_NAME: ""\n            OS_PROJECT_NAME: ""        \n      - debug:\n          msg: "{{ os_env }}"\n      vars:\n        site_ep_basename: "{{ site_endpoint | basename }}"\n        site_ep_dirname: "{{ site_endpoint | dirname }}"\n        site_endpoint_prefix: "{{ (site_ep_dirname + \'%s\') if (\'v3\' in site_ep_basename or \'v2.0\' in site_ep_basename) else (site_endpoint + \'%s\') }}"\n        site_auth_endpoint: "{{ site_endpoint_prefix | format(auth_path) }}"\n        site_project_endpoint: "{{ site_endpoint_prefix | format(project_path) }}"\n        site_token_endpoint: "{{ site_endpoint_prefix | format(token_path) }}"\n' ;
.

:Parameter_77
  rdf:type exchange:Parameter ;
  exchange:name "file" ;
  exchange:hasParameter :Parameter_75 ;
  exchange:hasParameter :Parameter_76 ;
.


:Parameter_78
  rdf:type exchange:Parameter ;
  exchange:name "dependencies" ;
  exchange:hasParameter :Parameter_77 ; 
.

:Parameter_79
  rdf:type exchange:Parameter ;
  exchange:name "implementation" ;
  exchange:hasParameter :Parameter_74 ;
 exchange:hasParameter :Parameter_78 ;
.

:Parameter_80
  rdf:type exchange:Parameter ;
  exchange:name "delete" ;
  exchange:hasParameter :Parameter_71 ;
  exchange:hasParameter :Parameter_79 ;
.

:Parameter_81
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_82
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.






:Property_1
  rdf:type exchange:Property ;
  exchange:name "network" ;
  exchange:description 'OpenStack network id (network names are not accepted)' ;
  exchange:hasParameter :Parameter_81 ;
  exchange:hasParameter :Parameter_82 ;
.
:Parameter_83
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_84
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.






:Property_2
  rdf:type exchange:Property ;
  exchange:name "name" ;
  exchange:description 'Name that should be given to the VM in OpenStack' ;
  exchange:hasParameter :Parameter_83 ;
  exchange:hasParameter :Parameter_84 ;
.
:Parameter_85
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_86
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.






:Property_3
  rdf:type exchange:Property ;
  exchange:name "security_groups" ;
  exchange:description 'OpenStack names of the security groups to which the instance should be added.Comma separated string.' ;
  exchange:hasParameter :Parameter_85 ;
  exchange:hasParameter :Parameter_86 ;
.
:Parameter_87
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_88
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.






:Property_4
  rdf:type exchange:Property ;
  exchange:name "flavor" ;
  exchange:description 'OpenStack flavor id (flavor names are not accepted)' ;
  exchange:hasParameter :Parameter_87 ;
  exchange:hasParameter :Parameter_88 ;
.
:Parameter_89
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_90
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.






:Property_5
  rdf:type exchange:Property ;
  exchange:name "image" ;
  exchange:description 'OpenStack image id (image names are not accepted)' ;
  exchange:hasParameter :Parameter_89 ;
  exchange:hasParameter :Parameter_90 ;
.
:Parameter_91
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_92
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.






:Property_6
  rdf:type exchange:Property ;
  exchange:name "key_name" ;
  exchange:description 'OpenStack SSH key name that should be placed on the VM' ;
  exchange:hasParameter :Parameter_91 ;
  exchange:hasParameter :Parameter_92 ;
.
:Parameter_93
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_94
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.






:Property_7
  rdf:type exchange:Property ;
  exchange:name "username" ;
  exchange:description 'Username for SSH connection' ;
  exchange:hasParameter :Parameter_93 ;
  exchange:hasParameter :Parameter_94 ;
.
:Parameter_95
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'boolean' ;  
.

:Parameter_96
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.

:Parameter_97
  rdf:type exchange:Parameter ;
  exchange:name "default" ;
  exchange:value 'true' ;
.





:Property_8
  rdf:type exchange:Property ;
  exchange:name "include_exporter" ;
  exchange:description 'Flag to include exporter' ;
  exchange:hasParameter :Parameter_95 ;
  exchange:hasParameter :Parameter_96 ;
  exchange:hasParameter :Parameter_97 ;
.
:Parameter_98
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'integer' ;  
.

:Parameter_99
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.

:Parameter_100
  rdf:type exchange:Parameter ;
  exchange:name "default" ;
  exchange:value '600' ;
.





:Property_9
  rdf:type exchange:Property ;
  exchange:name "timeout" ;
  exchange:description 'Timeout to instantiate the VM' ;
  exchange:hasParameter :Parameter_98 ;
  exchange:hasParameter :Parameter_99 ;
  exchange:hasParameter :Parameter_100 ;
.
:Parameter_101
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_102
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.

:Parameter_103
  rdf:type exchange:Parameter ;
  exchange:name "default" ;
  exchange:value '' ;
.





:Property_10
  rdf:type exchange:Property ;
  exchange:name "floating_ip_pools" ;
  exchange:description 'Name of floating IP pool from which to choose a floating IP' ;
  exchange:hasParameter :Parameter_101 ;
  exchange:hasParameter :Parameter_102 ;
  exchange:hasParameter :Parameter_103 ;
.
:Parameter_104
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;  
.

:Parameter_105
  rdf:type exchange:Parameter ;
  exchange:name "required" ;
  exchange:value 'false' ;
.

:Parameter_106
  rdf:type exchange:Parameter ;
  exchange:name "default" ;
  exchange:value '' ;
.





:Property_11
  rdf:type exchange:Property ;
  exchange:name "userdata" ;
  exchange:description 'Additional userdata applied to configure the VM' ;
  exchange:hasParameter :Parameter_104 ;
  exchange:hasParameter :Parameter_105 ;
  exchange:hasParameter :Parameter_106 ;
.

:Parameter_107
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;
.

	


:Attribute_1
  rdf:type exchange:Attribute ;
  exchange:name "id" ;
  exchange:description 'OpenStack id of the VM' ;
  exchange:hasParameter :Parameter_107 ;
.
:Parameter_108
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'string' ;
.

	


:Attribute_2
  rdf:type exchange:Attribute ;
  exchange:name "ansible_ip" ;
  exchange:description 'ansible ipv4' ;
  exchange:hasParameter :Parameter_108 ;
.

:Parameter_109
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'tosca.interfaces.node.lifecycle.Standard' ;
.

:Parameter_110
  rdf:type exchange:Parameter ;
  exchange:name "operations" ;
  exchange:hasParameter :Parameter_70 ;
  exchange:hasParameter :Parameter_80 ;
.

:Interface_1
  rdf:type exchange:Interface ;
  exchange:name "Standard" ;
  exchange:hasParameter :Parameter_109 ;
  exchange:hasParameter :Parameter_110 ;
.

:Parameter_111
  rdf:type exchange:Parameter ;
  exchange:name "type" ;
  exchange:value 'tosca.capabilities.Node' ;
.

:Parameter_112
  rdf:type exchange:Parameter ;
  exchange:name "valid_source_types" ;
.
	
:Capability_1
  rdf:type exchange:Capability ;
  exchange:name "feature" ;
  exchange:hasParameter :Parameter_111 ;
  exchange:hasParameter :Parameter_112 ;
.

:Parameter_113
  rdf:type exchange:Parameter ;
  exchange:name "capability" ;
  exchange:value 'tosca.capabilities.Node' ;  
.

:Parameter_114
  rdf:type exchange:Parameter ;
  exchange:name "node" ;
  exchange:value 'openstack/sodalite.nodes.OpenStack.SecurityRules' ;  
.

:Parameter_115
  rdf:type exchange:Parameter ;
  exchange:name "relationship" ;	  
  exchange:value 'tosca.relationships.DependsOn' ;  
.

:Requirement_1
  rdf:type exchange:Requirement ;
  exchange:name "protected_by" ;
  exchange:hasParameter :Parameter_113 ;
  exchange:hasParameter :Parameter_114 ;
  exchange:hasParameter :Parameter_115 ;
.		

:NodeType_1
  rdf:type exchange:NodeType ;
  exchange:name "sodalite.nodes.OpenStack.VM" ;
  exchange:derivesFrom 'tosca.nodes.Compute' ;  
  exchange:properties :Property_1 ; 
  exchange:properties :Property_2 ; 
  exchange:properties :Property_3 ; 
  exchange:properties :Property_4 ; 
  exchange:properties :Property_5 ; 
  exchange:properties :Property_6 ; 
  exchange:properties :Property_7 ; 
  exchange:properties :Property_8 ; 
  exchange:properties :Property_9 ; 
  exchange:properties :Property_10 ; 
  exchange:properties :Property_11 ; 
  exchange:attributes :Attribute_1 ; 
  exchange:attributes :Attribute_2 ; 
  exchange:requirements :Requirement_1 ; 
  exchange:capabilities :Capability_1 ; 
  exchange:interfaces :Interface_1 ; 
.  



